<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">





<mapper namespace="chris">
	<select id="getStudentNoListViaClassNo" parameterType="long" resultType="long">
		SELECT user_no
		  FROM b_class_user
		 WHERE class_no = #{classNo }
		   AND class_role = 'student'
	</select>
	<select id="getAttdNumListViaClassNo" parameterType="hashmap" resultType="long">
		SELECT attd_no 
		  FROM B_ATTD_NUMBER b
		 WHERE class_no = #{classNo }
		   AND created_date between to_date(#{startDate },'YYYYMMDD HH24') 
							    and to_date(#{endDate },'YYYYMMDD HH24mi')+1
		ORDER BY created_date
	</select>
	
		<select id="getUserNameViaUserNo" parameterType="long" resultType="string">
		SELECT user_name as userName
		  FROM b_user
		 WHERE user_no = #{userNo }
	</select>
	<select id="getAttdDateViaAttdNo" parameterType="long" resultType="string">
		SELECT to_char(created_date, 'MMDD')
		  FROM b_attd_number b
		 WHERE attd_no = #{attdNo }
	</select>
	<select id="getDescriptionViaAttdNoAndUserNo" parameterType="hashmap" resultType="string">
		SELECT description 
		  FROM b_attendance
		 WHERE attd_no = #{attdNo} 
		   AND user_no= #{userNo}
	</select>
	
	<select id="getClassNoViaAttdNo" parameterType="long" resultType="long">
		SELECT class_no
		  FROM B_ATTD_NUMBER
		 WHERE ATTD_NO=#{attdNo }
	</select>
	<select id="getAttdNoViaClassDateAndClassNo" parameterType="hashmap" resultType="long">
		SELECT attd_no
		FROM (	SELECT created_date, class_no, attd_no, rownum as temporder
				FROM	(SELECT created_date, class_no, attd_no
						   FROM B_ATTD_NUMBER 
						  WHERE created_date BETWEEN TO_DATE(#{classDate},'YYYYMMDDHH24mi') 
												 AND TO_DATE(#{classDate},'YYYYMMDDHH24mi')+1
							AND class_no = #{classNo }
						ORDER BY created_date asc)				)
		WHERE temporder =#{attdIndex}
		
	</select>
	<delete id="delteAttd" parameterType="hashmap">
		DELETE FROM b_attendance 
		 WHERE user_no = #{userNo } 
		   AND attd_no = #{attdNo }
	</delete>
	<insert id="insertAttdVo" parameterType="AttendanceVo">
		INSERT INTO b_attendance
		VALUES (#{userNo },
				#{attdStatus },
				#{description },
				#{attdNo } )
	</insert>
	<update id="updateAttd" parameterType="AttendanceVo">
		UPDATE B_ATTENDANCE 
		   SET attd_status= #{attdStatus }
		 WHERE user_no = #{userNo } 
		   AND attd_no = #{attdNo }
	</update>
	<select id="getLastRandomNumberByClassNo" parameterType="long" resultType="long">
		SELECT random_number
		FROM (
				SELECT rownum as temporder, 
						created_date, 
						random_number, 
						class_no, 
						attd_no, 
						timer_min, 
						start_time
				FROM (
						SELECT created_date, random_number, class_no, attd_no, timer_min, start_time 
						FROM B_ATTD_NUMBER b 
						WHERE class_no = 3
						AND created_date is not null
						ORDER BY created_date desc
					)
		) where temporder=1
	</select>
	<select id="getClassNoViaPostNo" resultType="long" parameterType="long">
		SELECT class_no as classNo
		  FROM b_board
		 WHERE post_no = #{postNo }			
	</select>
	<select id="getUserVoViaUserId" parameterType="string" resultType="UserVo">
		SELECT user_no as userNo,
				user_id as userId,
				user_name as userName,
				user_password as userPassword,
				user_phone_id as userPhoneId,
				user_type as userType,
				unread_count as unreadCount
		FROM b_user
		where user_id = #{userId }
	</select>
	<select id="getRecentChatsViaUserNo" parameterType="long" resultType="hashmap">
		<![CDATA[
		SELECT *
		  FROM (	SELECT  from_user_no,
							to_user_no, 
							from_user_name,
							created_date, 
							message,
							rownum as tempOrder 
					  FROM (SELECT c.from_user_no, c.to_user_no, c.created_date, c.message, u.USER_NAME as from_user_name
							  FROM b_chatting c, b_user u
							 WHERE to_user_no = #{userNo }
							   AND from_user_no = u.user_no
							ORDER BY created_date
							)
		) WHERE tempOrder <=5
		]]>
	</select>
	<select id="getUserIdViaUserNo" parameterType="long" resultType="string">
		SELECT user_id
		FROM b_user
		WHERE user_no = #{userNo }
	</select>
	
	<update id="plusOneUnreadCountByUserNo" parameterType="long">
		UPDATE b_user 
		   SET unread_count = unread_count+1 
		 WHERE user_no=#{userNo }
	</update>
	<update id="toZeroUnreadCountByUserNo" parameterType="long">
		UPDATE b_user 
		   SET unread_count = 0 
		 WHERE user_no=#{userNo }
	</update>
	<select id="getStudentPhoneListViaClassNo" parameterType="long" resultType="string">
		SELECT user_phone_id 
		FROM B_USER
		WHERE user_no IN (SELECT user_no 
							FROM B_CLASS_USER
						   WHERE class_no = #{classNo } 
							 AND class_role = 'student'		)
	</select>
	
</mapper>